generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  Id          Int      @id @default(autoincrement())
  FirstName   String   @db.VarChar(255)
  LastName    String   @db.VarChar(255)
  Email       String   @unique(map: "Email") @db.VarChar(255)
  CompanyName String?  @db.VarChar(255)
  Orders      Orders[]
}

model Measurement {
  Id                 Int                         @id @default(autoincrement())
  MeasurementType    Measurement_MeasurementType
  Unit               Measurement_Unit
  MeasurementImage   MeasurementImage[]
  Orders             Orders[]
  ShirtMeasurement   ShirtMeasurement[]
  TrouserMeasurement TrouserMeasurement[]
}

model MeasurementImage {
  Id            Int         @id @default(autoincrement())
  Name          String?     @db.VarChar(255)
  S3Url         String?     @db.VarChar(500)
  MeasurementId Int
  Measurement   Measurement @relation(fields: [MeasurementId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "MeasurementImage_ibfk_1")

  @@index([MeasurementId], map: "MeasurementId")
}

model OrderDetail {
  Id          Int                      @id @default(autoincrement())
  OrderId     Int
  ProductId   Int
  Price       Decimal                  @default(0.00) @db.Decimal(10, 2)
  Quantity    Int                      @default(1) @db.TinyInt
  SuitType    OrderDetail_SuitType?
  TrouserId   Int?
  TailoredFit OrderDetail_TailoredFit?
  FabricId    Int?
  LiningId    Int?
  ButtonId    Int?
  Orders      Orders                   @relation(fields: [OrderId], references: [OrderId], onDelete: Cascade, onUpdate: Restrict, map: "OrderDetail_ibfk_1")
  Product     Product                  @relation(fields: [ProductId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "OrderDetail_ibfk_2")

  @@index([OrderId], map: "OrderId")
  @@index([ProductId], map: "ProductId")
}

model Orders {
  OrderId          Int                   @id @default(autoincrement())
  CustomerId       Int
  MeasurementId    Int
  SalesOrderNumber String                @unique(map: "SalesOrderNumber") @db.VarChar(50)
  Sequence         Int?                  @db.TinyInt
  CreatedAt        DateTime?             @default(now()) @db.DateTime(0)
  Note             String?               @db.Text
  TotalAmount      Decimal               @default(0.000000) @db.Decimal(10, 6)
  Country          String?               @db.VarChar(100)
  City             String?               @db.VarChar(100)
  State            String?               @db.VarChar(100)
  ZipCode          String?               @db.VarChar(20)
  Phone            String?               @db.VarChar(15)
  ShippingMethod   Orders_ShippingMethod
  DifferentAddress Boolean?              @default(false)
  PaymentStatus    Orders_PaymentStatus
  StripeId         String?               @db.VarChar(1000)
  Lang             String?               @db.VarChar(10)
  CurrencyCode     String?               @db.VarChar(10)
  CurrencyRate     Decimal?              @default(1.000000) @db.Decimal(10, 6)
  OrderDetail      OrderDetail[]
  Customer         Customer              @relation(fields: [CustomerId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "Orders_ibfk_1")
  Measurement      Measurement           @relation(fields: [MeasurementId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "Orders_ibfk_2")

  @@index([CustomerId], map: "CustomerId")
  @@index([MeasurementId], map: "MeasurementId")
}

model Product {
  Id                 Int                  @id @default(autoincrement())
  Name               String               @db.VarChar(255)
  Description        String?              @db.Text
  S3Url              String?              @db.VarChar(500)
  ProductType        Product_ProductType
  PriceType          Product_PriceType
  Code               String?              @db.VarChar(100)
  Price              Decimal              @default(0.000000) @db.Decimal(10, 6)
  OrderDetail        OrderDetail[]
  ProductTranslation ProductTranslation[]
}

model ProductTranslation {
  Id             Int     @id @default(autoincrement())
  ProductId      Int
  Language       String  @db.VarChar(10)
  TranslatedName String  @db.VarChar(255)
  Product        Product @relation(fields: [ProductId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "ProductTranslation_ibfk_1")

  @@index([ProductId], map: "ProductId")
}

model ShirtMeasurement {
  Id               Int         @id @default(autoincrement())
  MeasurementId    Int
  Chest            Decimal?    @db.Decimal(5, 2)
  Shoulder         Decimal?    @db.Decimal(5, 2)
  ArmLength        Decimal?    @db.Decimal(5, 2)
  ArmShoulderJoint Decimal?    @db.Decimal(5, 2)
  ArmBicepWidth    Decimal?    @db.Decimal(5, 2)
  JacketWidth      Decimal?    @db.Decimal(5, 2)
  Abdomen          Decimal?    @db.Decimal(5, 2)
  BellyTummy       Decimal?    @db.Decimal(5, 2)
  Hips             Decimal?    @db.Decimal(5, 2)
  Neck             Decimal?    @db.Decimal(5, 2)
  Measurement      Measurement @relation(fields: [MeasurementId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "ShirtMeasurement_ibfk_1")

  @@index([MeasurementId], map: "MeasurementId")
}

model TrouserMeasurement {
  Id            Int         @id @default(autoincrement())
  MeasurementId Int
  Waist         Decimal?    @db.Decimal(5, 2)
  UpperHips     Decimal?    @db.Decimal(5, 2)
  HipsCrotch    Decimal?    @db.Decimal(5, 2)
  Outswarm      Decimal?    @db.Decimal(5, 2)
  Thigh         Decimal?    @db.Decimal(5, 2)
  Calf          Decimal?    @db.Decimal(5, 2)
  Measurement   Measurement @relation(fields: [MeasurementId], references: [Id], onDelete: Cascade, onUpdate: Restrict, map: "TrouserMeasurement_ibfk_1")

  @@index([MeasurementId], map: "MeasurementId")
}

enum Measurement_MeasurementType {
  Shirt
  Trouser
}

enum Measurement_Unit {
  Cm
  Inch
}

enum Product_ProductType {
  DesignOfSuit
  JacketOnly
  TrouserOnly
  VestCoatOnly
  FabricOptions
  Shirt
  TailoredFit
  Button
  Lining
  SuitType
}

enum Product_PriceType {
  FullSuit
  TwoPieceSuit                       @map("2PieceSuit")
  ThreePieceSuit                       @map("3PieceSuit")
  JacketOnlySuperWool150
  JacketOnlyVelvette
  JacketOnlyCashmereWool
  JacketOnlyLinen200GSM
  JacketOnlyMerinoWool
  TrouserOnlySuperWool150
  TrouserOnlyVelvette
  TrouserOnlyCashmereBlend
  TrouserOnlyLinen200GSM
  TrouserOnlyMerinoWool
  VestCoatOnlySuperWool150
  VestCoatOnlyVelvette
  VestCoatOnlyCashmereCahmereWool
  VestCoatOnlyLinen200GSM
  VestCoatOnlyMerinoWool
}

enum OrderDetail_SuitType {
  TwoPiece @map("2piece")
  ThreePiece @map("3piece")
}

enum OrderDetail_TailoredFit {
  SlimFit
  ComfortFit
}

enum Orders_ShippingMethod {
  Standard
  Express
}

enum Orders_PaymentStatus {
  failed
  success
  none
}
